# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  test:
    docker:
      - image: circleci/golang:1.14.2
        environment:
          GO111MODULE: "on"
          APP_PORT: 3000
          APP_TIMEZONE: "UTC"
          DATABASE_URL: "postgres://portfolio:@localhost/portfolio?sslmode=disable"
          DATABASE_MAX_IDLE_CONNS: 10
          DATABASE_MAX_OPEN_CONNS: 10
          TESTING_DATABASE_URL: "postgres://portfolio:@localhost/portfolio?sslmode=disable"
          TESTING_DATABASE_MAX_IDLE_CONNS: 10
          TESTING_DATABASE_MAX_OPEN_CONNS: 10
          CORS_ALLOWED_ORIGINS: "http://localhost:3000,https://antonve.be"

      - image: circleci/postgres:11.1-alpine
        environment:
          POSTGRES_USER: portfolio
          POSTGRES_DB: portfolio

    working_directory: /go/src/github.com/antonve/portfolio-api
    steps:
      - checkout

      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}-{{ checksum "tools.go" }}

      - run:
          name: Install gex
          command: go get github.com/izumin5210/gex/cmd/gex && make setup

      - run:
          name: Lint project
          command: make lint
      - run:
          name: Run migrations
          command: make migrate
      - run:
          name: Run tests
          command: go test -cover ./...

      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}-{{ checksum "tools.go" }}
          paths:
            - "/go/pkg/mod"
  build:
    docker:
      - image: circleci/golang:1.14.2
    working_directory: /go/src/github.com/antonve/portfolio-api
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Deploy image to Docker hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

            IMAGE_NAME=antonve/portfolio-api
            docker build -t $IMAGE_NAME:latest .
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:${CIRCLE_SHA1}
            docker push $IMAGE_NAME

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: main
