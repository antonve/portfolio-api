// Code generated by MockGen. DO NOT EDIT.
// Source: repositories.go

// Package usecases is a generated GoMock package.
package usecases

import (
	domain "github.com/antonve/portfolio-api/domain"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockResumeRepository is a mock of ResumeRepository interface
type MockResumeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockResumeRepositoryMockRecorder
}

// MockResumeRepositoryMockRecorder is the mock recorder for MockResumeRepository
type MockResumeRepositoryMockRecorder struct {
	mock *MockResumeRepository
}

// NewMockResumeRepository creates a new mock instance
func NewMockResumeRepository(ctrl *gomock.Controller) *MockResumeRepository {
	mock := &MockResumeRepository{ctrl: ctrl}
	mock.recorder = &MockResumeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockResumeRepository) EXPECT() *MockResumeRepositoryMockRecorder {
	return m.recorder
}

// FindBySlug mocks base method
func (m *MockResumeRepository) FindBySlug(slug string) (domain.Resume, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindBySlug", slug)
	ret0, _ := ret[0].(domain.Resume)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindBySlug indicates an expected call of FindBySlug
func (mr *MockResumeRepositoryMockRecorder) FindBySlug(slug interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindBySlug", reflect.TypeOf((*MockResumeRepository)(nil).FindBySlug), slug)
}

// StoreResume mocks base method
func (m *MockResumeRepository) StoreResume(resume *domain.Resume) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreResume", resume)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreResume indicates an expected call of StoreResume
func (mr *MockResumeRepositoryMockRecorder) StoreResume(resume interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreResume", reflect.TypeOf((*MockResumeRepository)(nil).StoreResume), resume)
}

// StoreResumeLog mocks base method
func (m *MockResumeRepository) StoreResumeLog(log *domain.ResumeLog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreResumeLog", log)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreResumeLog indicates an expected call of StoreResumeLog
func (mr *MockResumeRepositoryMockRecorder) StoreResumeLog(log interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreResumeLog", reflect.TypeOf((*MockResumeRepository)(nil).StoreResumeLog), log)
}
